---
import { ViewTransitions } from "astro:transitions"
import MetaTags from "../components/MetaTags.astro"
import "@fontsource-variable/martian-mono"
const { title } = Astro.props
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link
			rel="apple-touch-icon"
			sizes="180x180"
			href="/apple-touch-icon.png"
		/>
		<link
			rel="icon"
			type="image/png"
			sizes="32x32"
			href="/favicon-32x32.png"
		/>
		<link
			rel="icon"
			type="image/png"
			sizes="16x16"
			href="/favicon-16x16.png"
		/>
		<link
			rel="manifest"
			href="/site.webmanifest"
		/>
		<script
			defer
			src="/chat-bot.js"
		></script>
		<meta
			name="viewport"
			content="width=device-width"
		/>
		<meta
			name="generator"
			content={Astro.generator}
		/>
		<!-- <ViewTransitions /> -->
		<MetaTags />
		<title>{title}</title>
		<style>
			body {
				font-family: "Martian Mono Variable", monospace;
			}
		</style>
	</head>
	<body class="bg-base-paper text-base-black">
		<div class="mx-auto flex min-h-[100dvh] max-w-3xl flex-col px-4">
			<slot />
		</div>
		<script>
			document.addEventListener("astro:page-load", () => {
				const initTabs = () => {
					const tabs: HTMLInputElement[] = Array.from(
						document.querySelectorAll("input[type='radio']"),
					)

					// Set initial state based on URL
					const urlParams = new URLSearchParams(window.location.search)
					const activeTab = urlParams.get("tab")
					if (activeTab) {
						tabs.forEach((input) => {
							input.checked = input.id === activeTab
						})
					}

					// Handle tab clicks
					tabs.forEach((input) => {
						input.addEventListener("click", () => {
							const url = new URL(String(window.location))
							url.searchParams.set("tab", input.id)
							history.pushState({ tab: input.id }, "", url)
						})
					})
				}

				// Initialize on first load
				initTabs()

				// Handle browser back/forward
				window.addEventListener("popstate", (e) => {
					if (e.state && e.state.tab) {
						const tabs: HTMLInputElement[] = Array.from(
							document.querySelectorAll("input[type='radio']"),
						)
						tabs.forEach((input) => {
							input.checked = e.state.tab === input.id
						})
					}
				})
			})

			// Reinitialize on view transitions (optional but recommended)
			document.addEventListener("astro:after-swap", () => {
				const urlParams = new URLSearchParams(window.location.search)
				const activeTab = urlParams.get("tab")
				if (activeTab) {
					const tabs: HTMLInputElement[] = Array.from(
						document.querySelectorAll("input[type='radio']"),
					)
					tabs.forEach((input) => {
						input.checked = input.id === activeTab
					})
				}
			})
		</script>
	</body>
</html>
